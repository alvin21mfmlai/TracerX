KLEE: output directory is "/home/sanghu/TracerX/tracerx/test/Feature/Output/LoggingInstructions.c.tmp.klee-out"
Using Z3 solver backend
KLEE: WARNING: undefined reference to function: printf
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:27:0:  %1 = alloca i32, align 4
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:27:1:  %k = alloca i32, align 4
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:27:2:  store i32 0, i32* %1
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:27:3:  %2 = bitcast i32* %k to i8*, !dbg !133
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:27:4:  call void @klee_make_symbolic(i8* %2, i64 4, i8* getelementptr inbounds ([2 x i8]* @.str, i32 0, i32 0)), !dbg !133
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:28:5:  %3 = load i32* %k, align 4, !dbg !134
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:28:6:  %4 = icmp ult i32 %3, 5, !dbg !134
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:28:7:  %5 = zext i1 %4 to i32, !dbg !134
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:28:8:  %6 = sext i32 %5 to i64, !dbg !134
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:28:9:  call void @klee_assume(i64 %6), !dbg !134
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:30:10:  %7 = load i32* %k, align 4, !dbg !135
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:30:11:  %8 = zext i32 %7 to i64, !dbg !135
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:30:12:  %9 = getelementptr inbounds [5 x i8]* @array, i32 0, i64 %8, !dbg !135
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:30:13:  %10 = load i8* %9, align 1, !dbg !135
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:30:14:  %11 = sext i8 %10 to i32, !dbg !135
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:30:15:  %12 = icmp eq i32 %11, -4, !dbg !135
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:30:16:  br i1 %12, label %13, label %15, !dbg !135
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:46:19:  ret i32 0, !dbg !138
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:31:17:  %14 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str1, i32 0, i32 0)), !dbg !137
KLEE: WARNING ONCE: calling external: printf(60204976)
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:31:18:  br label %15, !dbg !137
     /home/sanghu/TracerX/tracerx/test/Feature/LoggingInstructions.c:46:19:  ret i32 0, !dbg !138
KLEE: Memory cap NOT exceeded!

KLEE: done: Total reduced symbolic execution tree nodes = 3
KLEE: done: Total number of visited basic blocks = 4

KLEE: done: Subsumption statistics
KLEE: done:     Time for actual solver calls in subsumption check (ms) = 0
KLEE: done:     Number of solver calls for subsumption check (failed) = 0 (0)
KLEE: done:     Concrete store expression build time (ms) = 0
KLEE: done:     Symbolic store expression build time (ms) = 0
KLEE: done:     Solver access time (ms) = 0
KLEE: done:     Average table entries per subsumption checkpoint = 1.00
KLEE: done:     Number of subsumption checks = 3
KLEE: done:     Average solver calls per subsumption check = 0.00

KLEE: done: TxTree method execution times (ms):
KLEE: done:     setCurrentINode = 0.012
KLEE: done:     remove = 0.031
KLEE: done:     subsumptionCheck = 0.002
KLEE: done:     markPathCondition = 0.002
KLEE: done:     split = 0.006
KLEE: done:     executeOnNode = 0.058
KLEE: done:     executeMemoryOperation = 0.161

KLEE: done: TxTreeNode method execution times (ms):
KLEE: done:     getInterpolant = 0.002
KLEE: done:     addConstraintTime = 0.006
KLEE: done:     splitTime = 0.006
KLEE: done:     execute = 0.054
KLEE: done:     bindCallArguments = 0
KLEE: done:     bindReturnValue = 0
KLEE: done:     getStoredExpressions = 0
KLEE: done:     getStoredCoreExpressions = 0.005

KLEE: done: total instructions = 21
KLEE: done: completed paths = 2, among which
KLEE: done:     early-terminating paths (instruction time limit, solver timeout, max-depth reached) = 0
KLEE: done:     average branching depth of completed paths = 1
KLEE: done:     average branching depth of subsumed paths = 0
KLEE: done:     average instructions of completed paths = 17.5
KLEE: done:     average instructions of subsumed paths = 0
KLEE: done:     subsumed paths = 0
KLEE: done:     error paths = 0
KLEE: done:     program exit paths = 2
KLEE: done: generated tests = 2, among which
KLEE: done:     early-terminating tests (instruction time limit, solver timeout, max-depth reached) = 0
KLEE: done:     error tests = 0
KLEE: done:     program exit tests = 2

KLEE: done: NOTE:
KLEE: done:     Subsumed paths / tests counts are nondeterministic for
KLEE: done:     programs with dynamically-allocated memory such as those
KLEE: done:     using malloc, since KLEE may reuse the address of the
KLEE: done:     same malloc calls in different paths. This nondeterminism
KLEE: done:     does not cause loss of error reports.
